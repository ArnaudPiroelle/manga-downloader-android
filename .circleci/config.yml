version: 2.0

config_android: &config_android
  docker:
  - image: circleci/android:api-28-alpha
  working_directory: ~/work
  environment:
    JAVA_TOOL_OPTIONS: "-Xmx1024m"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false"
    TERM: dumb

update_sdk: &update_sdk
  run:
    name: Update SDK
    command: |
      mkdir "$ANDROID_HOME/licenses" || true
      echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license"
      echo "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
      sdkmanager "platform-tools" "platforms;android-28"

restore_cache: &restore_cache
  restore_cache:
    key: gradle-cache

save_cache: &save_cache
  save_cache:
    paths:
    - ~/.gradle/caches
    - ~/.gradle/wrapper
    key: gradle-cache

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/work

persist_workspace: &persist_workspace
  persist_to_workspace:
    root: .
    paths:
    - ./*/build

workflow_filter_only_develop: &workflow_filter_only_develop
  filters:
    tags:
      ignore: /.*/
    branches:
      only: /.*/

jobs:
  build_debug:
    <<: *config_android
    steps:
    - <<: *update_sdk
    - checkout
    - <<: *restore_cache
    - run:
        name: Assemble and Test APKs
        command: ./gradlew :app:assembleDebug
    - <<: *save_cache
    - store_artifacts:
        path: app/build/outputs/apk/debug/app-debug.apk
        destination: outputs
    - <<: *persist_workspace

  check:
    <<: *config_android
    steps:
    - checkout
    - <<: *attach_workspace
    - <<: *restore_cache
    - run:
        name: Check app and dependencies
        command: ./gradlew check
    - store_artifacts:
        path: app/build/reports
        destination: reports
    - run:
        name: Save test results
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
        when: always
    - store_test_results:
        path: ~/junit
    - store_artifacts:
        path: ~/junit


workflows:
  version: 2
  build_test_deploy:
    jobs:
    - build_debug:
        <<: *workflow_filter_only_develop
    - check:
        requires:
        - build_debug
        <<: *workflow_filter_only_develop