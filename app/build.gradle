apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

buildscript {
    ext {
        kotlin_version = '1.2.30'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.arnaudpiroelle.manga"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 10
        versionName "1.2.0"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        buildConfigField 'String', 'JAPSCAN_BASE_URL', '"http://www.japscan.com"'
        buildConfigField 'String', 'JAPSCAN_CDN_BASE_URL', '"http://cd151.d836pbl.club/"'

        buildConfigField 'String', 'MANGAPANDA_BASE_URL', '"http://www.mangapanda.com"'
        buildConfigField 'String', 'MANGAPANDA_CDN_BASE_URL', '"http://i10.mangacdn.com"'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile file('manga-downloader.keystore')
            storePassword propOrDef("APP_KEYSTORE_PASSWORD", "manga-downloader")
            keyAlias 'manga-downloader'
            keyPassword propOrDef("APP_KEYSTORE_PASSWORD", "manga-downloader")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled = true

            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ext.betaDistributionGroupAliases = "release"

            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        mock.java.srcDirs += 'src/mock/kotlin'
        local.java.srcDirs += 'src/local/kotlin'
        prod.java.srcDirs += 'src/prod/kotlin'
    }

    adbOptions {
        timeOutInMs 600000
    }


    lintOptions {
        abortOnError false
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    compile 'com.android.support:support-annotations:27.0.2'
    compile 'com.android.support:appcompat-v7:27.0.2'
    compile 'com.android.support:design:27.0.2'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.google.dagger:dagger:2.0'
    compile 'se.emilsjolander:sprinkles:1.3.1'
    compile 'io.reactivex:rxandroid:0.25.0'

    implementation "io.reactivex.rxjava2:rxjava:2.1.9"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.2"

    compile 'com.daimajia.swipelayout:library:1.2.0@aar'
    compile('com.crashlytics.sdk.android:crashlytics:2.4.0@aar') {
        transitive = true;
    }

    compile 'com.github.hotchemi:permissionsdispatcher:2.3.1'
    kapt 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'

    kapt 'com.google.dagger:dagger-compiler:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'

}

String propOrDef(String propertyName, String defaultValue) {
    return hasProperty(propertyName) ? property(propertyName) : defaultValue
}