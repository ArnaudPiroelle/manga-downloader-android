apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "com.arnaudpiroelle.manga"

        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        versionCode 20
        versionName "3.0.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile file('manga-downloader.keystore')
            storePassword propOrDef("APP_KEYSTORE_PASSWORD", "manga-downloader")
            keyAlias 'manga-downloader'
            keyPassword propOrDef("APP_KEYSTORE_PASSWORD", "manga-downloader")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix = ".dev"
            minifyEnabled false
            testCoverageEnabled = true

            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    api project(':data')
    api project(':provider-japscan')
    api project(':worker')

    implementation "androidx.appcompat:appcompat:${versions.androidx.appcompat}"
    implementation "androidx.preference:preference:${versions.androidx.preference}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.androidx.lifecycle}"
    kapt "androidx.lifecycle:lifecycle-compiler:${versions.androidx.lifecycle}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.androidx.constraint_layout}"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'

    implementation "com.google.android.material:material:${versions.material_design}"
    implementation "android.arch.navigation:navigation-fragment-ktx:${versions.androidx.navigation}"
    implementation "android.arch.navigation:navigation-ui-ktx:${versions.androidx.navigation}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"

    implementation 'com.github.codekidX:storage-chooser:2.0.4.2'

    implementation "androidx.room:room-runtime:${versions.androidx.room}"
    implementation "androidx.room:room-rxjava2:${versions.androidx.room}"
    kapt "androidx.room:room-compiler:${versions.androidx.room}"

    implementation "io.reactivex.rxjava2:rxjava:${versions.rx}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"

    implementation "com.github.hotchemi:permissionsdispatcher:4.0.0-alpha1"
    kapt "com.github.hotchemi:permissionsdispatcher-processor:4.0.0-alpha1"

    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:4.0.2"
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation "org.koin:koin-androidx-scope:1.0.2"
    implementation "org.koin:koin-androidx-viewmodel:1.0.2"

    implementation 'com.reddit:indicator-fast-scroll:1.1.0-beta1'
}

String propOrDef(String propertyName, String defaultValue) {
    return hasProperty(propertyName) ? property(propertyName) : defaultValue
}
